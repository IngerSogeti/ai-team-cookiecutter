# --------- PDM -------------

[project]
# PEP 621 project metadata
# See https://www.python.org/dev/peps/pep-0621/
dynamic = ["version"]
name = "ai-team-cookiecutter"
readme = "README.md"
description = "Cookiecutter template to generate python projects following the best practices gathered over the time."
authors = [
    {name = "Lyz", email = "lyz-code-security-advisories@riseup.net"},
]
license = {text = "GPL-3.0-only"}
requires-python = ">=3.9"
dependencies = [
  "cookiecutter<2.0.0",]

[project.urls]
Issues = "https://github.com/IngerSogeti/ai-team-cookiecutter/issues"
homepage = "https://github.com/IngerSogeti/ai-team-cookiecutter"
documentation = "https://github.com/IngerSogeti/ai-team-cookiecutter"

[project.optional-dependencies]

[tool.pdm]
editable-backend = "path"

[tool.pdm.overrides]

# To be removed once https://github.com/mkdocs/mkdocs/issues/2892 is solved
markdown = "<3.4"

[tool.pdm.dev-dependencies]
lint = [
    "yamllint>=1.26.3",
    "flake8-aaa>=0.12.0",
    "flake8-annotations>=2.7.0",
    "flake8-annotations-complexity>=0.0.6",
    "flake8-typing-imports>=1.11.0",
    "flake8-bugbear>=21.11.29",
    "flake8-debugger>=4.0.0",
    "flake8-fixme>=1.1.1",
    "flake8-markdown>=0.3.0",
    "flake8-mutable>=1.2.0",
    "flake8-pytest>=1.3",
    "flake8-pytest-style>=1.5.1",
    "flake8-simplify>=0.14.2",
    "flake8-variables-names>=0.0.4",
    "flake8-comprehensions>=3.7.0",
    "flake8-expression-complexity>=0.0.9",
    "flake8-use-fstring>=1.3",
    "flake8-eradicate>=1.2.0",
    "flake8-docstrings>=1.6.0",
    "pep8-naming>=0.12.1",
    "dlint>=0.12.0",
    "pylint>=2.12.2",
    "flake8>=3.9.2",
]
test = [
    "tox>=3.20.1",
    "pytest>=6.2.5",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=2.4.0",
    "pytest-freezegun>=0.4.2",
    "pydantic-factories>=0.5.0",
    "pytest-cookies>=0.6.1",
]
doc = [
    "mkdocs>=1.2.3",
    "mkdocs-git-revision-date-localized-plugin>=0.11",
    "mkdocs-htmlproofer-plugin>=0.7.0",
    "mkdocs-minify-plugin>=0.5.0",
    "mkdocs-autolinks-plugin>=0.4.0",
    "mkdocs-material>=8.0.5",
    "mkdocs-include-markdown-plugin>=2.8.0",
    "mkdocstrings>=0.16.2",
    "markdown-include>=0.6.0",
    "mkdocs-section-index>=0.3.2",
]
security = [
    "safety>=1.10.3",
    "bandit>=1.7.1",
]
fixers = [
    "black>=21.12b0",
    "isort>=5.10.1",
    "yamlfix>=0.8.0",
]
typing = [
    "mypy>=0.910",
    "types-requests>=2.27.9",
]
dev = [
    "pre-commit>=2.16.0",
    "twine>=3.8.0",
]

# --------- Black -------------

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py37', 'py38', 'py39', 'py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# --------- Pytest -------------

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vv --tb=short -n auto"
norecursedirs = [
    ".tox",
    ".git",
    "*/migrations/*",
    "*/static/*",
    "docs",
    "venv",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "secondary: mark tests that use functionality tested in the same file (deselect with '-m \"not secondary\"')"
]
filterwarnings = [
  "error",
  # Until https://github.com/ktosiek/pytest-freezegun/issues/35 is merged
  "ignore::DeprecationWarning:pytest_freezegun.*",
]

# --------- Isort -------------

[tool.isort]
profile = "black"
src_paths = ["src", "test"]


# --------- Pylint -------------

[tool.pylint.'TYPECHECK']
generated-members = "sh"

[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"

# --------- Mypy -------------

[tool.mypy]
show_error_codes = true
follow_imports = "silent"
ignore_missing_imports = false
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
# Required to not have  error: Untyped decorator makes function on fixtures and
# parametrize decorators
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = [
    "binaryornot.*",
    "factory_boy",
    "faker",
    "faker_enum",
    "nacl",
    "passpy",
    "pytest",
    "pytest_cookies.*"
]
ignore_missing_imports = true
